<Application x:Class="GolfAnalyzer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:GolfAnalyzer"
             xmlns:vm="clr-namespace:GolfAnalyzer.ViewModels"
             xmlns:views="clr-namespace:GolfAnalyzer.Views"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <!-- Simple nav button style -->
        <Style x:Key="NavButtonStyle" TargetType="Button">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="#555555"/>
            <Setter Property="Margin" Value="8,4"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="4">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F2F4F7"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#E6EAF0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- LED style: gray when false, lime when true -->
        <Style x:Key="LedDotStyle" TargetType="Ellipse">
            <Setter Property="Width" Value="18"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="Stroke" Value="#222"/>
            <Setter Property="StrokeThickness" Value="1"/>
            <Setter Property="Fill" Value="#444"/>
        </Style>
        <!-- Device LED Styles -->
        <Style x:Key="Device1LedStyle" TargetType="Ellipse" BasedOn="{StaticResource LedDotStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Device1Active}" Value="True">
                    <Setter Property="Fill" Value="Lime"/>
                    <Setter Property="Stroke" Value="#0A0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Device2LedStyle" TargetType="Ellipse" BasedOn="{StaticResource LedDotStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Device2Active}" Value="True">
                    <Setter Property="Fill" Value="Lime"/>
                    <Setter Property="Stroke" Value="#0A0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Device3LedStyle" TargetType="Ellipse" BasedOn="{StaticResource LedDotStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Device3Active}" Value="True">
                    <Setter Property="Fill" Value="Lime"/>
                    <Setter Property="Stroke" Value="#0A0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Dark theme brushes -->
        <SolidColorBrush x:Key="Brush.Surface" Color="#2F2F2F"/>
        <SolidColorBrush x:Key="Brush.Input"   Color="#3A3A3A"/>
        <SolidColorBrush x:Key="Brush.Border"  Color="#505050"/>
        <SolidColorBrush x:Key="Brush.Hover"   Color="#3F3F3F"/>
        <SolidColorBrush x:Key="Brush.Pressed" Color="#3A3A3A"/>
        <SolidColorBrush x:Key="Brush.Selected" Color="#2D5F9D"/>
        <SolidColorBrush x:Key="Brush.Foreground" Color="White"/>
        <SolidColorBrush x:Key="Brush.ForegroundMuted" Color="#D0D0D0"/>
        <SolidColorBrush x:Key="AccentBrush" Color="#00E5FF"/>

        <!-- ComboBoxItem dark style -->
        <Style x:Key="DarkComboBox" TargetType="ComboBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#222"/>
            <Setter Property="BorderBrush" Value="#444"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <!-- Main Border -->
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="3">
                                <!-- Left arrow + right content -->
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="24"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Drop-down button on the far left -->
                                    <ToggleButton Grid.Column="0"
                                                  Width="24"
                                                  Focusable="False"
                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ClickMode="Press"
                                                  Background="#333"
                                                  BorderBrush="#555"
                                                  BorderThickness="0">
                                        <Path Data="M 0 0 L 4 4 L 8 0 Z"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Fill="White"/>
                                    </ToggleButton>

                                    <!-- Selected content -->
                                    <ContentPresenter Grid.Column="1"
                                                      Margin="4,0,4,0"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      IsHitTestVisible="False"/>
                                </Grid>
                            </Border>

                            <!-- Popup -->
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Fade">
                                <Border Background="#222"
                                        BorderBrush="#444"
                                        BorderThickness="1">
                                    <ScrollViewer>
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#666"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#888"/>
                                <Setter Property="Background" Value="#333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Padding" Value="10,6"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Style.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" Value="#2C2C2C"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#112B2F"/>
                                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ViewModel -> View mapping -->
        <DataTemplate DataType="{x:Type vm:HomeViewModel}">
            <views:HomeView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:DashboardViewModel}">
            <views:Dashboard/>
        </DataTemplate>
    </Application.Resources>
</Application>